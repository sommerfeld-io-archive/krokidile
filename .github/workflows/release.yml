---
## This file defines a GitHub Actions workflow for releasing the project. The purpose of this
## workflow is to automate the release process of the project. It specifies the steps and
## conditions for creating a release whenever a new tag and GitHub release is pushed to the
## repository.

name: Release

on:
  release:
    types: [created]

env:
  IMAGE_TAG_RC: rc
  IMAGE_TAG_LATEST: latest

jobs:
  publish-release:
    runs-on: ubuntu-latest
    name: ${{ matrix.image-name }}
    env:
      DOCS_FILE: README # with path, without extension
    permissions:
      contents: read
    strategy:
      matrix:
        include:
          - registry: docker.io
            image-name: krokidile
          - registry: docker.io
            image-name: krokidile-docs
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Deploy to DockerHub
        run: |
          TAG="${GITHUB_REF#refs/tags/}"
          TAG="${TAG#v}"

          echo "New version tag = $TAG"

          docker pull "${{ matrix.registry }}/${{ secrets.DOCKERHUB_USER }}/${{ matrix.image-name }}:${{ env.IMAGE_TAG_RC }}"

          docker tag "${{ matrix.registry }}/${{ secrets.DOCKERHUB_USER }}/${{ matrix.image-name }}:${{ env.IMAGE_TAG_RC }}" "${{ matrix.registry }}/${{ secrets.DOCKERHUB_USER }}/${{ matrix.image-name }}:${{ env.IMAGE_TAG_LATEST }}"
          docker tag "${{ matrix.registry }}/${{ secrets.DOCKERHUB_USER }}/${{ matrix.image-name }}:${{ env.IMAGE_TAG_RC }}" "${{ matrix.registry }}/${{ secrets.DOCKERHUB_USER }}/${{ matrix.image-name }}:$TAG"

          docker push "${{ matrix.registry }}/${{ secrets.DOCKERHUB_USER }}/${{ matrix.image-name }}:${{ env.IMAGE_TAG_LATEST }}"
          docker push "${{ matrix.registry }}/${{ secrets.DOCKERHUB_USER }}/${{ matrix.image-name }}:$TAG"
        shell: bash
      - name: Convert ${{ env.DOCS_FILE }} from Asciidoc to Markdown for DockerHub description
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc asciidoc
          asciidoc -b docbook ${{ env.DOCS_FILE }}.adoc
          mv ${{ env.DOCS_FILE }}.xml ./UPLOAD.xml
          pandoc -f docbook -t markdown_strict UPLOAD.xml -o UPLOAD.md
        shell: bash
      - name: Update DockerHub description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ secrets.DOCKERHUB_USER }}/${{ matrix.image-name }}
          short-description: ${{ github.event.repository.description }}
          readme-filepath: ./UPLOAD.md
