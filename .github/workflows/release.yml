---
##
##
##

name: Release

on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  release-code:
    runs-on: ubuntu-latest
    if: ${{ (github.actor != 'dependabot[bot]') && (github.ref == 'refs/heads/main') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Info - package.json
        run: cat package.json
        shell: bash
      - name: Info - docs/antora.yml
        run: cat docs/antora.yml
        shell: bash
      - name: Install Node.js
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 22.2.0
      - name: semantic-release - Install
        run: |
          npm install --save-dev semantic-release
          npm install --save-dev @semantic-release/commit-analyzer
          npm install --save-dev @semantic-release/release-notes-generator
          npm install --save-dev @semantic-release/github
        shell: bash
      - name: semantic-release - Run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
        shell: bash

  release-docker-images:
    runs-on: ubuntu-latest
    if: ${{ (github.actor != 'dependabot[bot]') && (github.ref == 'refs/heads/main') }}
    name: ${{ matrix.image-name }}:${{ github.sha }}
    needs: [
      'release-code',
    ]
    env:
      DOCS_FILE: README # with path, without extension
    permissions:
      contents: read
    strategy:
      matrix:
        include:
          - registry: docker.io
            image-name: krokidile
          - registry: docker.io
            image-name: krokidile-docs
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{github.ref}}
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Print Tag
        run: echo "$(git describe --tags `git rev-list --tags --max-count=1`)"
        shell: bash
      - name: Deploy to DockerHub
        run: |
          VERSION="$(git describe --tags `git rev-list --tags --max-count=1`)"
          docker pull "$IMAGE:rc"

          docker tag "$IMAGE:rc" "$IMAGE:latest"
          docker tag "$IMAGE:rc" "$IMAGE:$VERSION"

          docker push "$IMAGE:latest"
          docker push "$IMAGE:$VERSION"
        shell: bash
      - name: Convert ${{ env.DOCS_FILE }} from Asciidoc to Markdown for DockerHub description
        run: |
          sudo apt-get install -y pandoc asciidoc
          asciidoc -b docbook ${{ env.DOCS_FILE }}.adoc
          mv ${{ env.DOCS_FILE }}.xml ./UPLOAD.xml
          pandoc -f docbook -t markdown_strict UPLOAD.xml -o UPLOAD.md
        shell: bash
      - name: Update DockerHub description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: ${{ matrix.image-name }}
          short-description: ${{ github.event.repository.description }}
          readme-filepath: ./UPLOAD.md

  # bump versions
  # Github release

  # TODO dockerhub in a matrix
  # TODO revert version in antora.yml? from bash (sed)?
