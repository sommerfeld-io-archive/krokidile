---
# @file pipeline.yml
# @brief Deployment pipeline for the source2docs-website.
#
# @description The deployment pipeline for the source2docs-website is implemented using GitHub
# Actions. The primary objective of this pipeline is to assess the releasability of the application
# for deployment with every push to the ``main`` branch. This is achieved through a series of
# automated tests and validations (performed on all branches, but the ``main`` branch carries the
# code thatshould be stable and production-ready). The workflow is designed to build every artifact
# of the source2docs-website and subject it to various types of tests to verify its functionality
# and integrity. If all tests are successful, indicating that the project is ready for release, a
# release candidate is generated and published to DockerHub.
#
# The deployment process for the source2docs-website utilizes Docker images. Images are built and
# unit tested. Each Snapshot image is tagged with the commit-sha, providing a clear reference to
# the version of the codebase from which it was generated, and subsequently pushed to DockerHub.
# Following this initial deployment, the Snapshot Docker images undergo further testing (security,
# performance, acceptance, etc.) to assess their performance and stability. If these additional
# tests pass successfully (and the workflow is running on the ``main`` branch), indicating that the
# Snapshot image is robust and reliable, it is then tagged as a release candidate. Notably, release
# candidates are exclusively published from the ``main`` branch.


name: Build + Deployment Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches-ignore:
      - dependabot/**
  schedule:
    - cron: '0 1 * * 2'

env:
  IMAGE_TAG_RC: rc
  IMAGE_TAG_LATEST: latest

permissions:
  contents: read

jobs:

  # ----- Commit stage - 1 - lint ---------------

  lint-yaml:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run yamllint
        run: docker-compose up lint-yaml
        shell: bash

  lint-filenames:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run ls-lint in container
        run: docker-compose up filenames
        shell: bash

  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@2.0.0
        with:
          ignore_paths: node_modules target

  # ----- Build stage - docs --------------------

  docs:
    runs-on: ubuntu-latest
    if: ${{ (github.actor != 'dependabot[bot]') && (github.ref == 'refs/heads/main') }}
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{github.ref}}
      - name: Adjust version in docs/antora.yml
        uses: sebastian-sommerfeld-io/github-action-update-antora-yml@main
        with:
          git_ref: ${{github.ref}}
          file: docs/antora.yml
      - name: Copy adoc files to project root
        run: |
          cp docs/modules/ROOT/pages/index.adoc README.adoc
          cp docs/modules/ROOT/pages/license.adoc LICENSE
          cp docs/modules/ROOT/pages/contribute.adoc CONTRIBUTING.adoc
          cp docs/modules/ROOT/pages/security.adoc SECURITY.adoc
        shell: bash
      - name: Add do-not-edit remark to adoc files in project root
        run: |
          for file in *.adoc; do

            {
              echo
              echo "// +---------------------------------------------------+"
              echo "// |                                                   |"
              echo "// |        DO NOT EDIT DIRECTLY !!!!!                 |"
              echo "// |                                                   |"
              echo "// |        File is auto-generated by pipeline.        |"
              echo "// |        Contents are based on Antora docs.         |"
              echo "// |                                                   |"
              echo "// +---------------------------------------------------+"
            } >> "$file"

          done
        shell: bash
      - name: Replace Captions in adoc files in project root
        run: |
          file=README.adoc
          content=$(cat "$file")
          content="${content//= Introduction/= source2adoc}"
          echo "$content" > "$file"

          file=LICENSE
          content=$(cat "$file")
          content="${content//= MIT License/= MIT License}"
          echo "$content" > "$file"
        shell: bash
      - name: Replace xref with links to GitHub in adoc files in project root
        run: |
          for file in *.adoc; do
            content=$(cat "$file")
            content="${content//xref:development-guide:development-guide.adoc[]/link:https://github.com/sommerfeld-io/source2adoc/blob/main/docs/modules/development-guide/pages/development-guide.adoc[Development Guide]}"
            echo "$content" > "$file"
          done
        shell: bash
      - name: Commit and push
        uses: EndBug/add-and-commit@v9.1.4
        with:
          author_name: sebastian
          author_email: sebastian@sommerfeld.io
          message: "[Actions Bot] generate docs"
